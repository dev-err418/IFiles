{"version":3,"sources":["App.tsx"],"names":["Upload","useState","showModal","setShowModal","progress","setProgress","CID","setCid","files","setFiles","onDrop","useCallback","accFiles","rejFiles","mappedAcc","map","file","errors","curr","useDropzone","getRootProps","getInputProps","onDelete","filter","fw","storeWithProgress","client","a","async","onRootCidReady","cid","console","log","totalSize","f","size","reduce","b","uploaded","onStoredChunk","pct","toFixed","put","Fragment","style","height","width","boxShadow","borderRadius","justifyContent","length","alignItems","display","flexDirection","disabled","marginBottom","fontWeight","marginTop","fileWrapper","i","FileHeader","padding","onPress","fichiers","Web3Storage","token","j","push","test","Modal","name","substring","useEffect","position","backgroundColor","top","left","zIndex","String","color","StyleSheet","create","container","flex","App","minHeight","fontSize","margin","textAlign","marginVertical","numberOfLines","minWidth","maxWidth"],"mappings":"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","file":"static/js/app.6b36967f.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  ActivityIndicator,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Web3Storage } from \"web3.storage\";\nimport { FileError, FileRejection, useDropzone } from \"react-dropzone\";\n\nconst token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDdlYjhhQTFiQjU2YjRBYjQyOUJjNjFjOTZDMEY4ZWQ0N2I3ZTNmNzciLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NDMxMDYwNTc2MTksIm5hbWUiOiJmcmVja2xlc19iZXRhIn0.LDAqENz1d3GDm03rHH12lyYPtES46B3qKfnsY1w249Q\";\n\ninterface UploadableFile {\n  file: File;\n  errors: FileError[];\n}\n\nconst App = () => {\n  return (\n    <View\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        minHeight: \"100vh\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Text\n        style={{\n          fontSize: \"3rem\",\n          margin: \"15vw\",\n          textAlign: \"center\",\n          fontWeight: \"800\",\n          marginVertical: \"60px\",\n          padding: 0,\n        }}\n        numberOfLines={2}\n      >\n        Add your files and share them with the world ! üåç\n      </Text>\n\n      <View\n        style={{\n          minWidth: \"400px\",\n          maxWidth: \"800px\",\n          minHeight: \"400px\",\n          borderRadius: \"15px\",\n          marginBottom: \"25vh\",\n        }}\n      >\n        <Upload />\n      </View>\n    </View>\n\n    /* <button onClick={() => test()}>Launch</button> */\n    /* </View> */\n  );\n};\n\nconst Upload = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [progress, setProgress] = useState<number>(0);\n  const [CID, setCid] = useState<string>(\"\");\n  const [files, setFiles] = useState<UploadableFile[]>([]);\n  const onDrop = useCallback((accFiles: File[], rejFiles: FileRejection[]) => {\n    const mappedAcc = accFiles.map((file) => ({ file, errors: [] }));\n    setFiles((curr) => [...curr, ...mappedAcc, ...rejFiles]);\n  }, []);\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  const onDelete = (file: File) => {\n    setFiles((curr) => curr.filter((fw) => fw.file !== file));\n  };\n\n  const test = async (fichiers) => {\n    const client = new Web3Storage({ token });\n    console.log(fichiers);\n    var files = [];\n    for (let j = 0; j < fichiers.length; j++) {\n      let file = fichiers[j].file;\n\n      files.push(file);\n    }\n    console.log(files);\n    storeWithProgress(files, client);\n  };\n\n  async function storeWithProgress(files, client) {\n    const onRootCidReady = (cid: string) => {\n      console.log(\"uploading files with cid:\", cid);\n      setCid(cid);\n    };\n\n    const totalSize = files.map((f) => f.size).reduce((a, b) => a + b, 0);\n    let uploaded = 0;\n\n    const onStoredChunk = (size) => {\n      uploaded += size;\n      console.log(totalSize, uploaded);\n      const pct = (uploaded / totalSize) * 100;\n      if (pct < 100) {\n        setProgress(pct);\n      } else {\n        setProgress(100.0);\n      }\n      console.log(`Uploading... ${pct.toFixed(1)}% complete`);\n    };\n    setShowModal(true);\n    return client.put(files, { onRootCidReady, onStoredChunk });\n  }\n\n  return (\n    <React.Fragment>\n      <div\n        {...getRootProps()}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          // backgroundColor: \"rgb(235,235,235)\",\n          boxShadow: \"0px 0px 50px lightgray\",\n          borderRadius: \"15px\",\n          justifyContent: files.length > 0 ? \"space-evenly\" : \"center\",\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <input {...getInputProps()} disabled={showModal} />\n        {files.length > 0 ? (\n          <Text\n            style={{\n              marginBottom: \"40px\",\n              fontWeight: \"600\",\n              marginTop: \"20px\",\n            }}\n          >\n            Click background to add more files\n          </Text>\n        ) : (\n          <Text style={{ fontWeight: \"600\" }}>\n            Drag some files here, or click to upload\n          </Text>\n        )}\n        {files.map((fileWrapper, i) => (\n          <FileHeader key={i} file={fileWrapper.file} onDelete={onDelete} />\n        ))}\n        {files.length > 0 ? (\n          <TouchableOpacity\n            style={{\n              marginTop: \"40px\",\n              padding: \"15px\",\n              borderRadius: \"15px\",\n              // backgroundColor: \"lightgray\",\n              boxShadow: \"0px 0px 15px lightgray\",\n              marginBottom: \"10px\",\n            }}\n            onPress={() => test(files)}\n          >\n            <Text style={{ fontWeight: \"600\" }}>Upload üì°</Text>\n          </TouchableOpacity>\n        ) : null}\n        {showModal ? <Modal progress={progress} cid={CID} /> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\ninterface FileHeaderProps {\n  file: File;\n  onDelete: (file: File) => void;\n}\n\nconst FileHeader = ({ file, onDelete }: FileHeaderProps) => {\n  return (\n    <View\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"calc(100% - 80px)\",\n        justifyContent: \"space-between\",\n        marginBottom: \"10px\",\n      }}\n    >\n      <Text style={{ fontWeight: \"500\" }}>{file.name.substring(0, 30)}</Text>\n      <TouchableOpacity onPress={() => onDelete(file)}>\n        <Text>üóë</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst Modal = (progress, cid) => {\n  useEffect(() => {\n    console.log(\"&\", progress.progress);\n  }, [progress]);\n  useEffect(() => {\n    console.log(progress.cid);\n  }, [cid]);\n  return (\n    <View\n      style={{\n        position: \"fixed\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n        height: \"100vh\",\n        width: \"100vw\",\n        top: 0,\n        left: 0,\n        zIndex: 10,\n      }}\n    >\n      <View\n        style={{\n          padding: \"20px\",\n          borderRadius: \"15px\",\n          backgroundColor: \"rgb(235, 235, 235)\",\n        }}\n      >\n        {progress.progress == 100 ? (\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ marginBottom: \"20px\", fontWeight: \"600\" }}>\n              That your link !\n            </Text>\n            <Text style={{ marginBottom: \"10px\" }}>\n              Share it with whoever you want.\n            </Text>\n            <Text>https://{String(progress.cid)}.ipfs.dweb.link</Text>\n          </View>\n        ) : (\n          <View>\n            <Text style={{ marginBottom: \"20px\" }}>\n              Your files are uploading...\n            </Text>\n            {/* <Text>{String(progress.progress).substring(0, 4)}%</Text> */}\n            <ActivityIndicator color={\"lightgray\"} size={\"large\"} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default App;\n"],"sourceRoot":""}